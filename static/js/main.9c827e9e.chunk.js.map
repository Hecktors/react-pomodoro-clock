{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["initialState","App","useState","status","setStatus","pomodoroTimer","setPomodoroTimer","sessionTime","setSessionTime","breakTime","setBreakTime","timeLeft","setTimeLeft","showSettings","setShowSettings","minuteScaleWidth","setWidth","container","useRef","sound","scaleStyle","transform","Math","floor","formatedTime","slice","isRunning","iReset","className","iSettings","iCheck","iPlay","iPause","iAdd","iSubstract","useEffect","current","offsetWidth","clearInterval","setInterval","play","handleFlip","role","aria-label","ref","id","onClick","pause","currentTime","disabled","toUpperCase","src","style","map","unit","i","key","type","value","onChange","e","target","Number","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"4PAEMA,G,MACQ,IADRA,EAEM,EAFNA,GAGS,EAiRAC,MA5Qf,WAAe,MAEgBC,mBAAS,WAFzB,mBAENC,EAFM,KAEEC,EAFF,OAG8BF,qBAH9B,mBAGNG,EAHM,KAGSC,EAHT,OAI0BJ,mBAASF,GAJnC,mBAINO,EAJM,KAIOC,EAJP,OAKsBN,mBAASF,GAL/B,mBAKNS,EALM,KAKKC,EALL,OAMoBR,mBAAuB,GAAdK,GAN7B,mBAMNI,EANM,KAMIC,EANJ,OAO4BV,mBAASF,GAPrC,mBAONa,EAPM,KAOQC,EAPR,OAQyBZ,mBAAS,GARlC,mBAQNa,EARM,KAQYC,EARZ,KAWRC,EAAYC,iBAAO,MACnBC,EAAQD,iBAAO,MAIfE,EAAa,CAAEC,UAAU,cAAD,QAAkBN,EAAmB,GAAKO,KAAKC,MAAMZ,GAArD,QACxBa,GAAgB,IAAMF,KAAKC,MAAMZ,EAAW,KAAKc,OAAO,GAAK,KAAO,IAAMd,EAAW,IAAIc,OAAO,GAChGC,EAAuB,YAAXvB,GAAmC,UAAXA,EAIpCwB,EAAS,uBAAGC,UAAU,kBAAb,aACTC,EAAY,uBAAGD,UAAU,kBAAb,YAGZE,EAAS,uBAAGF,UAAU,kBAAb,SACTG,EAAQ,uBAAGH,UAAU,kBAAb,cACRI,EAAS,uBAAGJ,UAAU,kBAAb,SACTK,EAAO,uBAAGL,UAAU,kBAAb,OACPM,EAAa,uBAAGN,UAAU,kBAAb,UAGnBO,qBACC,WAECnB,EAASC,EAAUmB,QAAQC,YAAc,MAE1C,CAAEpB,IAGHkB,qBAAU,kBAAMvB,EAA0B,GAAdL,KAAmB,CAAEA,IAEjD4B,qBACC,WACK9B,IAAkBqB,GACrBpB,IACAgC,cAAcjC,KACHA,GAAiBqB,GAE5BpB,EACCiC,aAAY,WACX3B,GAAY,SAACD,GACZ,OAAOA,EAAW,OAEjB,QAIN,CAAEe,EAAWrB,IAGd8B,qBACC,WACKxB,GAAY,GAAKe,IACpBP,EAAMiB,QAAQI,OACdpC,EAAqB,YAAXD,EAAuB,QAAU,WAC3CS,EAAuB,YAAXT,EAAmC,GAAZM,EAA+B,GAAdF,MAGtD,CAAEI,EAAUe,EAAWrB,EAAeE,EAAaE,EAAWN,IAI/D,IAwBMsC,EAAa,WAClB3B,GAAiBD,IAGlB,OACC,yBAAKe,UAAU,OAEd,4BAAQA,UAAU,UACjB,yBAAKA,UAAU,oBACd,yBAAKA,UAAU,eACd,0BAAMA,UAAU,mBAAhB,MACI,4BAAQA,UAAU,UACpB,0BAAMc,KAAK,MAAMC,aAAW,gBAA5B,iBAFF,QADD,WAcF,0BAAMf,UAAU,WAAWgB,IAAK3B,GAE/B,yBAAKW,UAAS,+BAA0BzB,EAA1B,YAAoCU,EAAe,OAAS,GAA5D,MACb,yBAAKe,UAAU,eACd,4BAAQA,UAAU,YAAYiB,GAAG,QAAQC,QA1C1B,WACnB3B,EAAMiB,QAAQW,QACd5B,EAAMiB,QAAQY,YAAc,EAC5B5C,EAAU,WACVI,EAAeR,GACfU,EAAaV,GACbY,EAA0B,GAAdL,KAqCNoB,GAEF,yBAAKC,UAAU,uBACd,yBAAKiB,GAAG,gBAAgBjB,UAAU,iBACjC,yCADD,IACsB,8BAAOrB,EAAP,SAEtB,yBAAKsC,GAAG,cAAcjB,UAAU,iBAC/B,uCADD,IACoB,8BAAOnB,EAAP,UAGrB,4BAAQmB,UAAU,eAAekB,QAASL,EAAYQ,SAAqB,YAAX9C,GAC9D0B,IAIH,yBAAKD,UAAU,aACd,yBAAKA,UAAU,iBACd,yBAAKA,UAAU,cAAciB,GAAG,eACnB,YAAX1C,EAAuBA,EAAO+C,cAAgB,yBAEhD,yBAAKtB,UAAU,kBAAkBiB,GAAG,aAClCrB,GAEF,2BAAOqB,GAAG,OAAOM,IAvJP,6DAuJsBP,IAAKzB,KAEtC,yBAAKS,UAAU,uBACd,yBAAKA,UAAS,qCAAgCzB,EAAhC,aACd,yBAAKyB,UAAU,qBAAf,UACA,yBAAKA,UAAU,wBAAwBwB,MAAOhC,GA3ItC,CAAE,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,IA4I9DiC,KAAI,SAACC,EAAMC,GAAP,OACV,yBAAKC,IAAKD,EAAG3B,UAAU,oBACtB,yBAAKA,UAAU,uBACd,8BACA,8BACA,8BACA,8BACA,+BAED,yBACCA,UAAU,oBACVwB,MAAO,CACN/B,UAAWiC,EAAO,GAAK,mBAAqB,qBAG5CA,UAOP,yBAAK1B,UAAU,eACd,4BAAQA,UAAU,YAAYiB,GAAG,aAAaC,QAxG3B,WAER,YAAX3C,GAAsBC,EAAU,WACrB,YAAXD,GAAsBC,EAAU,iBACrB,kBAAXD,GAA4BC,EAAU,WAC3B,UAAXD,GAAoBC,EAAU,eACnB,gBAAXD,GAA0BC,EAAU,WAmGjCsB,EAAoBM,EAARD,KAGV,IAGP,yBAAKH,UAAS,8BAA0Bf,EAAwB,GAAT,SACtD,yBAAKe,UAAU,eACd,4BACCA,UAAU,YACVkB,QAjGsB,WAC3BtC,EAAeR,GACfU,EAAaV,GACbY,EAA0B,GAAdL,IA+FP0C,SAAU1C,IAAgBP,GAA4BS,IAAcT,GAEnE2B,GAEF,yBAAKC,UAAU,uBAAf,YACA,4BAAQkB,QAASL,EAAYb,UAAU,OACrCE,IAIH,yBAAKF,UAAU,aACd,yBAAKA,UAAU,YACd,yBAAKA,UAAU,kBAAf,QACA,yBAAKA,UAAU,mBACd,4BACCA,UAAU,kBACViB,GAAG,oBACHC,QAAS,kBAAMvC,EAAc,IAAMC,EAAeD,EAAc,KAE/D0B,GAEF,2BACCL,UAAU,iBACViB,GAAG,iBACHY,KAAK,SACLC,MAAOnD,EACPoD,SAAU,SAACC,GAAD,OACTA,EAAEC,OAAOH,MAAQ,GACjBE,EAAEC,OAAOH,MAAQ,IACjBlD,EAAesD,OAAOF,EAAEC,OAAOH,WAEjC,4BACC9B,UAAU,kBACViB,GAAG,oBACHC,QAAS,kBAAMvC,EAAc,GAAKC,EAAeD,EAAc,KAE9D2B,KAKJ,yBAAKN,UAAU,YACd,yBAAKA,UAAU,kBAAf,SACA,yBAAKA,UAAU,mBACd,4BACCA,UAAU,kBACViB,GAAG,kBACHC,QAAS,kBAAMrC,EAAY,IAAMC,EAAaD,EAAY,KAEzDwB,GAEF,2BACCL,UAAU,iBACViB,GAAG,eACHY,KAAK,SACLC,MAAOjD,EACPkD,SAAU,SAACC,GAAD,OACTA,EAAEC,OAAOH,OAAS,GAClBE,EAAEC,OAAOH,MAAQ,IACjBhD,EAAaoD,OAAOF,EAAEC,OAAOH,WAE/B,4BACC9B,UAAU,kBACViB,GAAG,kBACHC,QAAS,kBAAMrC,EAAY,GAAKC,EAAaD,EAAY,KAExDyB,OAKC,OCnQS6B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.9c827e9e.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nconst initialState = {\n\tsessionTime: 25,\n\tbreakTime: 5,\n\tshowSettings: false\n};\n\nconst audioUrl = 'https://freesound.org/data/previews/66/66951_634166-lq.mp3';\n\nfunction App() {\n\t// Hooks\n\tconst [ status, setStatus ] = useState('default');\n\tconst [ pomodoroTimer, setPomodoroTimer ] = useState();\n\tconst [ sessionTime, setSessionTime ] = useState(initialState.sessionTime);\n\tconst [ breakTime, setBreakTime ] = useState(initialState.breakTime);\n\tconst [ timeLeft, setTimeLeft ] = useState(sessionTime * 60);\n\tconst [ showSettings, setShowSettings ] = useState(initialState.showSettings);\n\tconst [ minuteScaleWidth, setWidth ] = useState(0);\n\n\t// References\n\tconst container = useRef(null);\n\tconst sound = useRef(null);\n\n\t// Constants\n\tconst units = [ 50, 55, 0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 0, 5, 10 ];\n\tconst scaleStyle = { transform: `translateX(${-(minuteScaleWidth / 60 * Math.floor(timeLeft))}px)` };\n\tconst formatedTime = ('0' + Math.floor(timeLeft / 60)).slice(-2) + ':' + ('0' + timeLeft % 60).slice(-2);\n\tconst isRunning = status === 'session' || status === 'break';\n\tconst statusStyle = status;\n\n\t// Material-Ui icons\n\tconst iReset = <i className=\"material-icons\">autorenew</i>;\n\tconst iSettings = <i className=\"material-icons\">settings</i>;\n\tconst iArrowUp = <i className=\"material-icons\">arrow_upward</i>;\n\tconst iArrowDown = <i className=\"material-icons\">arrow_downward</i>;\n\tconst iCheck = <i className=\"material-icons\">check</i>;\n\tconst iPlay = <i className=\"material-icons\">play_arrow</i>;\n\tconst iPause = <i className=\"material-icons\">pause</i>;\n\tconst iAdd = <i className=\"material-icons\">add</i>;\n\tconst iSubstract = <i className=\"material-icons\">remove</i>;\n\n\t// UseEffect\n\tuseEffect(\n\t\t() => {\n\t\t\t// container.current.offsetWidth === 400 ? setWidth(398 / 20) : setWidth(container.current.offsetWidth / 20);\n\t\t\tsetWidth(container.current.offsetWidth / 20);\n\t\t},\n\t\t[ container ]\n\t);\n\n\tuseEffect(() => setTimeLeft(sessionTime * 60), [ sessionTime ]);\n\n\tuseEffect(\n\t\t() => {\n\t\t\tif (pomodoroTimer && !isRunning) {\n\t\t\t\tsetPomodoroTimer();\n\t\t\t\tclearInterval(pomodoroTimer);\n\t\t\t} else if (!pomodoroTimer && isRunning) {\n\t\t\t\t// eslint-disable-next-line no-use-before-define\n\t\t\t\tsetPomodoroTimer(\n\t\t\t\t\tsetInterval(() => {\n\t\t\t\t\t\tsetTimeLeft((timeLeft) => {\n\t\t\t\t\t\t\treturn timeLeft - 1;\n\t\t\t\t\t\t});\n\t\t\t\t\t}, 100)\n\t\t\t\t);\n\t\t\t}\n\t\t},\n\t\t[ isRunning, pomodoroTimer ]\n\t);\n\n\tuseEffect(\n\t\t() => {\n\t\t\tif (timeLeft <= 0 && isRunning) {\n\t\t\t\tsound.current.play();\n\t\t\t\tsetStatus(status === 'session' ? 'break' : 'session');\n\t\t\t\tsetTimeLeft(status === 'session' ? breakTime * 60 : sessionTime * 60);\n\t\t\t}\n\t\t},\n\t\t[ timeLeft, isRunning, pomodoroTimer, sessionTime, breakTime, status ]\n\t);\n\n\t// Functions\n\tconst handleStartStop = () => {\n\t\t// if (status.includes('pause')) setTimeLeft(timeLeft - 1);\n\t\tif (status === 'default') setStatus('session');\n\t\tif (status === 'session') setStatus('session-pause');\n\t\tif (status === 'session-pause') setStatus('session');\n\t\tif (status === 'break') setStatus('break-pause');\n\t\tif (status === 'break-pause') setStatus('break');\n\t};\n\n\tconst handleReset = () => {\n\t\tsound.current.pause();\n\t\tsound.current.currentTime = 0;\n\t\tsetStatus('default');\n\t\tsetSessionTime(initialState.sessionTime);\n\t\tsetBreakTime(initialState.breakTime);\n\t\tsetTimeLeft(sessionTime * 60);\n\t};\n\n\tconst handleSettingsReset = () => {\n\t\tsetSessionTime(initialState.sessionTime);\n\t\tsetBreakTime(initialState.breakTime);\n\t\tsetTimeLeft(sessionTime * 60);\n\t};\n\n\tconst handleFlip = () => {\n\t\tsetShowSettings(!showSettings);\n\t};\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t{/* App-header */}\n\t\t\t<header className=\"header\">\n\t\t\t\t<div className=\"header-container\">\n\t\t\t\t\t<div className=\"header-logo\">\n\t\t\t\t\t\t<span className=\"logo-text-first\">\n\t\t\t\t\t\t\tPOM<strong className=\"tomato\">\n\t\t\t\t\t\t\t\t<span role=\"img\" aria-label=\"tomato emoji\">\n\t\t\t\t\t\t\t\t\t&#127813;\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</strong>DORO\n\t\t\t\t\t\t</span>CLOCK\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</header>\n\t\t\t{/* End App-header */}\n\n\t\t\t{/* main */}\n\t\t\t<main className=\"App-main\" ref={container}>\n\t\t\t\t{/* main-front */}\n\t\t\t\t<div className={`main-side main-front ${status} ${showSettings ? 'hide' : ''} `}>\n\t\t\t\t\t<div className=\"main-header\">\n\t\t\t\t\t\t<button className=\"reset-btn\" id=\"reset\" onClick={handleReset}>\n\t\t\t\t\t\t\t{iReset}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<div className=\"main-header-content\">\n\t\t\t\t\t\t\t<div id=\"session-label\" className=\"session-label\">\n\t\t\t\t\t\t\t\t<span>Session</span> <span>{sessionTime} min</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div id=\"break-label\" className=\"session-label\">\n\t\t\t\t\t\t\t\t<span>Break</span> <span>{breakTime} min</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<button className=\"settings-btn\" onClick={handleFlip} disabled={status !== 'default'}>\n\t\t\t\t\t\t\t{iSettings}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"main-body\">\n\t\t\t\t\t\t<div className=\"timer-display\">\n\t\t\t\t\t\t\t<div className=\"timer-label\" id=\"timer-label\">\n\t\t\t\t\t\t\t\t{status !== 'default' ? status.toUpperCase() : 'Click Button To Start'}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"timer-time-left\" id=\"time-left\">\n\t\t\t\t\t\t\t\t{formatedTime}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<audio id=\"beep\" src={audioUrl} ref={sound} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"timer-scale-display\">\n\t\t\t\t\t\t\t<div className={`time-scale-display-shadow  ${status}-shadow`} />\n\t\t\t\t\t\t\t<div className=\"timer-scale-arrow\">&#9660;</div>\n\t\t\t\t\t\t\t<div className=\"timer-scale-container\" style={scaleStyle}>\n\t\t\t\t\t\t\t\t{units.map((unit, i) => (\n\t\t\t\t\t\t\t\t\t<div key={i} className=\"timer-scale-unit\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"timer-scale-strokes\">\n\t\t\t\t\t\t\t\t\t\t\t<div />\n\t\t\t\t\t\t\t\t\t\t\t<div />\n\t\t\t\t\t\t\t\t\t\t\t<div />\n\t\t\t\t\t\t\t\t\t\t\t<div />\n\t\t\t\t\t\t\t\t\t\t\t<div />\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"timer-scale-label\"\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\ttransform: unit < 10 ? 'translateX(-3px)' : 'translateX(-8px)'\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{unit}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"main-footer\">\n\t\t\t\t\t\t<button className=\"timer-btn\" id=\"start_stop\" onClick={handleStartStop}>\n\t\t\t\t\t\t\t{!isRunning ? iPlay : iPause}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>{' '}\n\t\t\t\t{/* End main-front */}\n\t\t\t\t{/* main-back */}\n\t\t\t\t<div className={`main-side main-back ${!showSettings ? 'hide' : ''}`}>\n\t\t\t\t\t<div className=\"main-header\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName=\"reset-btn\"\n\t\t\t\t\t\t\tonClick={handleSettingsReset}\n\t\t\t\t\t\t\tdisabled={sessionTime === initialState.sessionTime && breakTime === initialState.breakTime}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{iReset}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<div className=\"main-header-content\">Settings</div>\n\t\t\t\t\t\t<button onClick={handleFlip} className=\"big\">\n\t\t\t\t\t\t\t{iCheck}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"main-body\">\n\t\t\t\t\t\t<div className=\"settings\">\n\t\t\t\t\t\t\t<div className=\"settings-label\">Work</div>\n\t\t\t\t\t\t\t<div className=\"settings-action\">\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName=\"settings-button\"\n\t\t\t\t\t\t\t\t\tid=\"session-increment\"\n\t\t\t\t\t\t\t\t\tonClick={() => sessionTime < 60 && setSessionTime(sessionTime + 1)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{iAdd}\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tclassName=\"settings-input\"\n\t\t\t\t\t\t\t\t\tid=\"session-length\"\n\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\tvalue={sessionTime}\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\t\t\te.target.value > 0 &&\n\t\t\t\t\t\t\t\t\t\te.target.value < 60 &&\n\t\t\t\t\t\t\t\t\t\tsetSessionTime(Number(e.target.value))}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName=\"settings-button\"\n\t\t\t\t\t\t\t\t\tid=\"session-decrement\"\n\t\t\t\t\t\t\t\t\tonClick={() => sessionTime > 1 && setSessionTime(sessionTime - 1)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{iSubstract}\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"settings\">\n\t\t\t\t\t\t\t<div className=\"settings-label\">Break</div>\n\t\t\t\t\t\t\t<div className=\"settings-action\">\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName=\"settings-button\"\n\t\t\t\t\t\t\t\t\tid=\"break-increment\"\n\t\t\t\t\t\t\t\t\tonClick={() => breakTime < 60 && setBreakTime(breakTime + 1)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{iAdd}\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tclassName=\"settings-input\"\n\t\t\t\t\t\t\t\t\tid=\"break-length\"\n\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\tvalue={breakTime}\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\t\t\te.target.value >= 0 &&\n\t\t\t\t\t\t\t\t\t\te.target.value < 60 &&\n\t\t\t\t\t\t\t\t\t\tsetBreakTime(Number(e.target.value))}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName=\"settings-button\"\n\t\t\t\t\t\t\t\t\tid=\"break-decrement\"\n\t\t\t\t\t\t\t\t\tonClick={() => breakTime > 1 && setBreakTime(breakTime - 1)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{iSubstract}\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>{' '}\n\t\t\t\t{/* End main-back */}\n\t\t\t</main>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}